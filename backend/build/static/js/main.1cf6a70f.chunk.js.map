{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","console","log","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cf6a70f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note ,toggleImportance}) => {\r\n\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl) ;\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject) ;\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll,  create,  update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import React from 'react'\r\n\r\nconst Footer = () => {  \r\n    const footerStyle = {    \r\n        color: 'green',   \r\n         fontStyle: 'italic',    \r\n         fontSize: 16  } \r\n          return (    \r\n          <div style={footerStyle}>      \r\n          <br />      \r\n          <em>Note app, Department of Computer Science, University of Helsinki 2020</em>   \r\n           </div>  )}\r\nexport default Footer;","import React, { useState, useEffect  } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('') ;\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {    \r\n\r\n    noteService\r\n    .getAll()      \r\n    .then(initialNotes => {       \r\n       setNotes(initialNotes)      \r\n      })  }, [])  \r\n      \r\n  \r\n  const notesToShow = showAll    \r\n    ? notes    \r\n    : notes.filter(note => note.important === true)\r\n\r\n  const addNote = (event) => {   \r\n     event.preventDefault()\r\n    const noteObject = {\r\n    content: newNote,\r\n    date: new Date().toISOString(),\r\n    important: Math.random() < 0.5,\r\n    id: notes.length + 1,\r\n     }\r\n     noteService\r\n     .create(noteObject)\r\n     .then(returnedNote  =>{\r\n      setNotes(notes.concat(returnedNote ))\r\n      setNewNote('') \r\n     })\r\n\t .catch(error =>{\r\n\t\t console.log('error from create',error.response.data)\r\n\t\t setErrorMessage( error.response.data.error)        \r\n           setTimeout(() => {          \r\n             setErrorMessage(null)        \r\n            }, 5000)\r\n\t })\r\n       \r\n    }\r\n    const handleNoteChange = (event) => {\r\n      console.log(event.target.value)    \r\n      setNewNote(event.target.value)  \r\n    }\r\n\r\n    const toggleImportanceOf = id => {\r\n      const note = notes.find(n => n.id === id)\r\n      const changedNote = { ...note, important: !note.important }\r\n      noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote  => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote ))\r\n      })\r\n      .catch(error => {    \r\n          console.log('error from update',error.response.data)\t  \r\n        setErrorMessage( error.response.data.error)        \r\n           setTimeout(() => {          \r\n             setErrorMessage(null)        \r\n            }, 5000)     \r\n\r\n          setNotes(notes.filter(n => n.id !== id))    \r\n        })\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>        \r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }        \r\n        </button>      \r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => \r\n          <Note key={note.id} note={note} toggleImportance={()=>toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote} \r\n          onChange={handleNoteChange}\r\n        />        \r\n        <button type=\"submit\">save</button>      \r\n      </form> \r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css' \n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}