{"version":3,"sources":["components/Filter.js","components/PersonForm .js","components/Persons.js","services/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","nameToSearch","onChange","handleSearch","PersonForm","onSubmit","handleSubmit","newName","handleName","newNumber","handleNumber","type","Persons","filteredPersons","handleDelete","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","styleName","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNameToSearch","setFilteredPersons","errorMessage","setErrorMessage","error","setError","useEffect","personService","initialPersons","filterProps","event","searchString","target","filter","toLowerCase","includes","personFormProps","preventDefault","agree","window","confirm","find","changedPerson","setTimeout","catch","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4945bd0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div>\r\n         filter shown with <input value={props.nameToSearch} onChange={props.handleSearch} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleName}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber} onChange={props.handleNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({filteredPersons,handleDelete}) => {\r\n    \r\n    return (\r\n            filteredPersons.map(person=> \r\n                <div key={person.id}> {person.name} {person.number} <button onClick={()=>handleDelete(person.id)}> delete </button></div>\r\n            )\r\n    )\r\n}\r\n\r\nexport default Persons;","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl,newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll , create, update, remove}","import React from 'react'\r\n\r\nconst Notification = ({ message ,styleName}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={styleName}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import React, { useState ,useEffect} from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm '\r\nimport Persons from './components/Persons'\r\nimport personService from './services/Persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n \r\n  const [persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ nameToSearch, setNameToSearch ] = useState('')\r\n  const [ filteredPersons, setFilteredPersons ] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [error , setError ] = useState(false)\r\n\r\n \r\n  useEffect (()=>{\r\n      personService\r\n      .getAll()\r\n     .then(initialPersons=>{\r\n        setPersons(initialPersons)\r\n        setFilteredPersons(initialPersons)\r\n     })\r\n  },[]);\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n      \r\n      event.preventDefault();\r\n      const names = persons.map(person => person.name);\r\n            \r\n      if(names.includes(newName)){\r\n        const agree = window.confirm(`${newName} is already added to phonebook, replace the old number with new a new one?`);\r\n        const id= persons.find( person => person.name ===newName).id;\r\n\r\n        if(agree){\r\n          personService\r\n          .update(id,{name:newName, number:newNumber})\r\n          .then(changedPerson => {\r\n            setErrorMessage(          \r\n              `Changed ${changedPerson.name}'s number`\r\n               )        \r\n               setTimeout(() => {          \r\n                 setErrorMessage(null)        \r\n                }, 5000) \r\n\r\n            setPersons(persons.map(person => person.id !==id ? person :changedPerson ))\r\n            setFilteredPersons(persons.map(person => person.id !==id ? person :changedPerson ))\r\n          }).catch( error => {\r\n            setErrorMessage(          \r\n              `Information of ${newName} has already been removed from server`\r\n               )        \r\n               setTimeout(() => {          \r\n                 setErrorMessage(null)        \r\n                }, 5000) \r\n            setError(true)\r\n            setPersons(persons.filter(person => person.id !==id))\r\n            setFilteredPersons(persons.filter(person => person.id !==id))\r\n          })\r\n        }        \r\n      }else{\r\n        personService\r\n       .create({name:newName, number:newNumber})\r\n       .then(changedPerson => {\r\n        setErrorMessage(          \r\n          `Added ${changedPerson.name}`\r\n           )        \r\n           setTimeout(() => {          \r\n             setErrorMessage(null)        \r\n            }, 5000) \r\n        setPersons(persons.concat(changedPerson))\r\n        setFilteredPersons(persons.concat(changedPerson))\r\n       })\r\n        \r\n      }\r\n      setNewName('');\r\n      setNewNumber('');\r\n     \r\n  }\r\n\r\n  const handleName = (event) => {\r\n      const name = event.target.value;\r\n      setNewName(name);\r\n  }\r\n \r\n  const handleNumber = (event) => {\r\n      const number = event.target.value;\r\n      setNewNumber(number);\r\n  }\r\n \r\n  const handleSearch = (event) =>{\r\n      const searchString = event.target.value;\r\n\r\n      const filteredPersons= persons.filter( person => \r\n          person.name.toLowerCase().includes(searchString.toLowerCase())\r\n      )\r\n        setNameToSearch(searchString)\r\n        setFilteredPersons( [...filteredPersons] )     \r\n      \r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    const name = persons.find(person => person.id===id).name;\r\n    const confirm = window.confirm(`delete ${name} ?`) ;\r\n    if(confirm) {\r\n      personService\r\n      .remove(id)\r\n      .then(response =>{\r\n        setErrorMessage(          \r\n          `removed ${name}`\r\n           )        \r\n           setTimeout(() => {          \r\n             setErrorMessage(null)        \r\n            }, 5000) \r\n        setError(true)\r\n        setPersons(persons.filter(person => person.id !==id))\r\n      })\r\n    }\r\n  }\r\n\r\n  let  filterProps = {\r\n       nameToSearch,\r\n       handleSearch\r\n  }\r\n\r\n let personFormProps = {\r\n    handleSubmit,\r\n    handleName,\r\n    handleNumber,\r\n    newName,\r\n    newNumber\r\n }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} styleName={error ? 'error' :'success'}/>\r\n      <Filter {...filterProps} />\r\n      <h2>add a new</h2>\r\n      <PersonForm  {...personFormProps} />\r\n      <h2>Numbers</h2>\r\n      <Persons filteredPersons={filteredPersons} handleDelete={handleDelete}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}